/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.LabWorkArea;

import Project.EcoSystem;
import Project.Venture.Venture;
import Project.Equipment.EquipmentService;
import Project.Network.NetworkService;
import Project.Organization.EmergencyOrganizationService;
import Project.Organization.OrganizationService;
import Project.UserAccount.UserAccountService;
import Project.WorkQueue.BillingWorkRequestService;
import Project.WorkQueue.EmergencyPatientRequestService;
import Project.WorkQueue.LabWorkRequestService;
import Project.WorkQueue.WorkRequestService;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Raveena
 */
public class LabWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form LabWorkAreaJPanel
     */
     JPanel userProcessContainer;
    Venture enterprise;
    EcoSystem system;
    OrganizationService organization;
    NetworkService network;
    UserAccountService account;
    LabWorkRequestService labWorkReq;
    EmergencyOrganizationService emergencyOrg; 
    public LabWorkAreaJPanel(JPanel userProcessContainer, UserAccountService account, OrganizationService organization, Venture enterprise,
            NetworkService network, EcoSystem business) {
        initComponents();
          this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.system = business;
        this.organization = organization;
        this.network = network;
        this.account = account;
        
        for (WorkRequestService wr : organization.getWorkkQueue().getWorkRequestList()) 
        {
            if(wr instanceof LabWorkRequestService) {
               
                 labWorkReq = (LabWorkRequestService)wr;
            }
        }
        
        populateTable();
    }
    
     public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) WorkReqTable.getModel();
        model.setRowCount(0);
        
        for (WorkRequestService wr : organization.getWorkkQueue().getWorkRequestList()) {
            if(wr instanceof LabWorkRequestService) {
                
                LabWorkRequestService epr = (LabWorkRequestService)wr;
                System.out.println(epr.getReqdate());
                Object[] row = new Object[model.getColumnCount()];
                row[0] = epr;
                row[1] = epr.getPati().getPatName();//epr.getSender().getEmployee().getName();
                row[2] = epr.getPati().getPatName();
                row[3] = epr.getPati().getPatId();
                row[4] = epr.getSpeciType();
                row[5] = epr.getLabTesttName();// epr.getRequestdate();
                row[6] = epr.getLabTestAdmFeedbck();
                row[7] = epr.getReqdate();
                row[8] = epr.getPati().getPhoneNo();
               
                model.addRow(row);
            }
            
        }
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        WorkReqTable = new javax.swing.JTable();
        btnAck = new javax.swing.JButton();
        btnRej = new javax.swing.JButton();
        btnProc = new javax.swing.JButton();
        btnCompleteReq = new javax.swing.JButton();
        jkLabel1 = new javax.swing.JLabel();
        jkLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        WorkReqTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "LabTestRequestId", "Sender", "Patient Name", "Patient ID", "Specimen Type", "LabTest Name", "LabTestFeedback", "Request Date", "Phone Number"
            }
        ));
        jScrollPane1.setViewportView(WorkReqTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 830, 171));

        btnAck.setText("Accept Request");
        btnAck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAckActionPerformed(evt);
            }
        });
        add(btnAck, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 351, 160, -1));

        btnRej.setText("Reject Request");
        btnRej.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejActionPerformed(evt);
            }
        });
        add(btnRej, new org.netbeans.lib.awtextra.AbsoluteConstraints(282, 351, 160, -1));

        btnProc.setText("Process Request");
        btnProc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcActionPerformed(evt);
            }
        });
        add(btnProc, new org.netbeans.lib.awtextra.AbsoluteConstraints(512, 351, 160, -1));

        btnCompleteReq.setText("Complete Request");
        btnCompleteReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompleteReqActionPerformed(evt);
            }
        });
        add(btnCompleteReq, new org.netbeans.lib.awtextra.AbsoluteConstraints(742, 351, 160, -1));

        jkLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jkLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jkLabel1.setText("LAB ADMIN WORK AREA");
        add(jkLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(248, 24, 483, 56));

        jkLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/labadmin.jpg"))); // NOI18N
        add(jkLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 850, 420));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAckActionPerformed
        
         int count = WorkReqTable.getSelectedRowCount();
        if(count != 1) {
            JOptionPane.showMessageDialog(null, "Select a request");
        }else {
            int selectedRow = WorkReqTable.getSelectedRow();
            System.out.println( WorkReqTable.getValueAt(selectedRow, 0));
            LabWorkRequestService emerReq = (LabWorkRequestService) WorkReqTable.getValueAt(selectedRow, 0);
            
            System.out.println(emerReq.getStat());
            
            if(emerReq.getStat().equals("Rejected")) {
                JOptionPane.showMessageDialog(null, "Request is already Rejected");
            }else if(emerReq.getStat().equals("Accepted")) {
                JOptionPane.showMessageDialog(null, "Request is already Accepted");
            }else if(emerReq.getStat().equals("Processing")) {
                JOptionPane.showMessageDialog(null, "Request is already Processing");
            }else if(emerReq.getStat().equals("Completed")) {
                JOptionPane.showMessageDialog(null, "Request is already Completed");
            }else if(emerReq.getStat().equals("Cancelled")) {
                JOptionPane.showMessageDialog(null, "Request is already cancelled by sender");
            }
            else {
                String msg = JOptionPane.showInputDialog("Additional Message");
                emerReq.setStat("Accepted");
                emerReq.setMes(msg);
                populateTable();
            }
        }
    }//GEN-LAST:event_btnAckActionPerformed

    private void btnRejActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejActionPerformed
        
        int count = WorkReqTable.getSelectedRowCount();
        if(count != 1) {
            JOptionPane.showMessageDialog(null, "Select a request");
        }else {
            int selectedRow = WorkReqTable.getSelectedRow();
            LabWorkRequestService emerReq = (LabWorkRequestService) WorkReqTable.getValueAt(selectedRow, 0);
            if(emerReq.getStat().equals("Rejected")) {
                JOptionPane.showMessageDialog(null, "Request is already Rejected");
            }if(emerReq.getStat().equals("Processing")) {
                JOptionPane.showMessageDialog(null, "Request is already Accepted and Processing");
            }else if(emerReq.getStat().equals("Completed")) {
                JOptionPane.showMessageDialog(null, "Request is already Completed");
            }else if(emerReq.getStat().equals("Cancelled")) {
                JOptionPane.showMessageDialog(null, "Request is already cancelled by sender");
            }             
            else {
                String msg = JOptionPane.showInputDialog("Additional Message");
                emerReq.setStat("Rejected");
                emerReq.setMes(msg);
                populateTable();
            }
        }
        
    }//GEN-LAST:event_btnRejActionPerformed

    private void btnProcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcActionPerformed
       int count = WorkReqTable.getSelectedRowCount();
        if (count != 1) {
            JOptionPane.showMessageDialog(null, "Select one row", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            int selectedRow = WorkReqTable.getSelectedRow();
            LabWorkRequestService emerReq = (LabWorkRequestService) WorkReqTable.getValueAt(selectedRow, 0);
            if(emerReq.getStat().equals("Cancelled")) {
                JOptionPane.showMessageDialog(null, "Request is already cancelled by sender");
            }else if(emerReq.getStat().equals("Processing")){
                JOptionPane.showMessageDialog(null, "Request is already Processing");
            }else if(emerReq.getStat().equals("Rejected")){
                JOptionPane.showMessageDialog(null, "Request is already Rejected");
            }else if(emerReq.getStat().equals("Completed")){
                JOptionPane.showMessageDialog(null, "Request is already Completed");
            }else if(emerReq.getStat().equals("Requested")) {
                JOptionPane.showMessageDialog(null, "Request is not yet Accepted");
            }
            else {
                String msg = JOptionPane.showInputDialog("Additional Message");                
                emerReq.setStat("Processing");
                emerReq.setMes(msg);
                populateTable();
            }            
        }
    }//GEN-LAST:event_btnProcActionPerformed

    private void btnCompleteReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompleteReqActionPerformed
        int count = WorkReqTable.getSelectedRowCount();
        if(count != 1) {
            JOptionPane.showMessageDialog(null, "Select a request");
        }else {
            int selectedRow = WorkReqTable.getSelectedRow();
            LabWorkRequestService emerReq = (LabWorkRequestService) WorkReqTable.getValueAt(selectedRow, 0);
            String childStatus = emerReq.getStat();        
           
            if(childStatus.equals("Rejected")) {
                JOptionPane.showMessageDialog(null, "Request is already Rejected");
            }else if(childStatus.equals("Accepted")) {
                JOptionPane.showMessageDialog(null, "Request should be in processing state before marking complete");
            }else if(childStatus.equals("Completed")) {
                JOptionPane.showMessageDialog(null, "Request is already Completed");
            }else if(childStatus.equals("Cancelled")) {
                JOptionPane.showMessageDialog(null, "Request is already cancelled by sender");
            }else if(childStatus.equals("Requested")) {
                JOptionPane.showMessageDialog(null, "Request is not yet Accepted");
            }else {
                String msg = JOptionPane.showInputDialog("Additional Message");
                emerReq.setStat("Completed");         
                emerReq.setMes(msg);
                emerReq.setLabTestAdmFeedbck(msg);
                emerReq.setResolvDate(new Date());
                populateTable();
            }
        }
    }//GEN-LAST:event_btnCompleteReqActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable WorkReqTable;
    private javax.swing.JButton btnAck;
    private javax.swing.JButton btnCompleteReq;
    private javax.swing.JButton btnProc;
    private javax.swing.JButton btnRej;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jkLabel1;
    private javax.swing.JLabel jkLabel2;
    // End of variables declaration//GEN-END:variables
}
