/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.MedicineUnitArea;


import Project.EcoSystem;
import Project.Venture.Venture;
import Project.Medicine.MedicineService;
import Project.Medicine.MedicineeList;
import Project.Network.NetworkService;
import Project.Organization.BillingOrganizationService;
import Project.Organization.MedicineOrganizationService;
import Project.Organization.OrganizationService;

import Project.UserAccount.UserAccountService;


import Project.WorkQueue.WorkRequestService;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;
/**
 *
 * @author Sandeep
 */
public class PharmacyWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form PharmacyWorkArea
     */
    JPanel userProcessContainer;
    private UserAccountService userAccount;
    private Venture enterprise;
    private EcoSystem ecoSystem;
//    private MedicalInventoryList mil;
    private OrganizationService org;
    private MedicineOrganizationService pharmorg;
    private NetworkService network;
    private static Logger log = Logger.getLogger(PharmacyWorkArea2.class);
    private static final String CLASS_NAME = PharmacyWorkArea2.class.getName();

    public PharmacyWorkArea(JPanel userProcessContainer, UserAccountService userAccount, OrganizationService organization, Venture enterprise, 
            NetworkService network,EcoSystem ecoSystem) {
        initComponents();
         this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
//        this.pharmorg = organization;
        this.network = network;
        this.ecoSystem = ecoSystem;
        
//        populateDocTable();
        log.debug(userAccount+" "+"logged in");
         OrganizationService medicineOrg = null;
      
            for(Venture enrise : network.getVentureDirectory().getVentureList())  
            {
              for (OrganizationService org : enrise.getOrganizationDirectory().getOrganizationList()) {
                  if(org instanceof MedicineOrganizationService)
                  {
                         this.pharmorg = (MedicineOrganizationService) org;
                        
                         break;
                     }
                 }
            }
       reorderTable();
    }

    public void reorderTable() {
        int rowCount = jreorderTable.getRowCount();
        DefaultTableModel model = (DefaultTableModel) jreorderTable.getModel();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        for (MedicineService mi : pharmorg.getMedList()) {
            Object row[] = new Object[4];
            row[0] = mi;
            row[1] = mi.getSeriallNumber();
            row[2] = mi.getAvailQuant();
            row[3] = mi.getReorderrStatus();
           // row[4] = 
            //row[5] = mi.getReorderStatus();
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jkLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jreorderTable = new javax.swing.JTable();
        jkLabel2 = new javax.swing.JLabel();
        serialNumTxtField = new javax.swing.JTextField();
        jkLabel3 = new javax.swing.JLabel();
        mediNameTxtField = new javax.swing.JTextField();
        jkLabel4 = new javax.swing.JLabel();
        availQuantTxtField = new javax.swing.JTextField();
        jkLabel5 = new javax.swing.JLabel();
        jComBox1 = new javax.swing.JComboBox<>();
        btnAddMedi = new javax.swing.JButton();
        jkLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jkLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jkLabel1.setText("PHARMACY WORK AREA");
        add(jkLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 19, 257, 38));

        jreorderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Medicine", "Serial Number", "Available Quantity", "Status"
            }
        ));
        jScrollPane1.setViewportView(jreorderTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 109, 794, 140));

        jkLabel2.setText("Serial Number:");
        add(jkLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(221, 286, -1, -1));
        add(serialNumTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(363, 279, 250, 30));

        jkLabel3.setText("Medicine Name :");
        add(jkLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(209, 346, -1, -1));
        add(mediNameTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(363, 339, 250, 30));

        jkLabel4.setText("Available Quantity: ");
        add(jkLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 407, -1, 14));
        add(availQuantTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(363, 399, 250, 30));

        jkLabel5.setText("Status :");
        add(jkLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(266, 465, -1, -1));

        jComBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Available", "Not Available" }));
        jComBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComBox1ActionPerformed(evt);
            }
        });
        add(jComBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(363, 459, 250, 30));

        btnAddMedi.setText("Add Medicine");
        btnAddMedi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMediActionPerformed(evt);
            }
        });
        add(btnAddMedi, new org.netbeans.lib.awtextra.AbsoluteConstraints(363, 507, 250, 30));

        jkLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/medicine.jpg"))); // NOI18N
        add(jkLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, 960, 350));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddMediActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMediActionPerformed
        // TODO add your handling code here:
        
         MedicineService m = new MedicineService();
        String name = mediNameTxtField.getText().trim();
        String error_message = "";
        String avail = availQuantTxtField.getText();
        try {
            Integer.parseInt(avail);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Available quantity must be integer");
            return;

        }
        if(name.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter the name ");
            return;
        }
        
        m.setMedName(mediNameTxtField.getText());
        try{
        int availableQuantity = Integer.parseInt(availQuantTxtField.getText());
        m.setAvailQuant(availableQuantity);
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "serial number must be integer!");
            return;
        }
        try{
        int serialNumber = Integer.parseInt(serialNumTxtField.getText());
        m.setSeriallNumber(serialNumber);
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "serial number must be integer!");
            return;
        }
        //String req = reqQuantityTxtField.getText();
        try {
           
           // m.setRequiredQuantity( Integer.parseInt(req));
        } catch (NumberFormatException e) {

            JOptionPane.showMessageDialog(null, "Required quantity must be integer!");
            return;
        }
       
//        ArrayList<String> medicineCheck = new ArrayList<>();
//        for(MedicalInventory mc:pharmorg.getMedList())
//        {
//            medicineCheck.add(mc.getMedicineName().toLowerCase());
//        }
//        if(medicineCheck.contains(name.toLowerCase()))
//        {
//            JOptionPane.showMessageDialog(null, "medicine already existed please update the quantity by clicking on view details");
//            return;
//        }
    String status =  jComBox1.getSelectedItem().toString();
    System.out.println(status);
        m.setReorderrStatus(status);
        pharmorg.addMedicine(m);
       
        
        

        DefaultTableModel dtm = (DefaultTableModel) jreorderTable.getModel();

        dtm.setRowCount(0);
        for (MedicineService mi : pharmorg.getMedList()) {
            Object row[] = new Object[4];
            row[0] = mi;
            row[1] = mi.getSeriallNumber();
            row[2] = mi.getAvailQuant();
            row[3] =  mi.getReorderrStatus();
          
            dtm.addRow(row);
        }

        JOptionPane.showMessageDialog(null, "Medicine Added Successfully", "Warning", JOptionPane.INFORMATION_MESSAGE);
        log.debug("medicine added successfully");
        serialNumTxtField.setText("");
        mediNameTxtField.setText("");
        availQuantTxtField.setText("");
        //reqQuantityTxtField.setText("");
        
    }//GEN-LAST:event_btnAddMediActionPerformed

    private void jComBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField availQuantTxtField;
    private javax.swing.JButton btnAddMedi;
    private javax.swing.JComboBox<String> jComBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jkLabel1;
    private javax.swing.JLabel jkLabel2;
    private javax.swing.JLabel jkLabel3;
    private javax.swing.JLabel jkLabel4;
    private javax.swing.JLabel jkLabel5;
    private javax.swing.JLabel jkLabel6;
    private javax.swing.JTable jreorderTable;
    private javax.swing.JTextField mediNameTxtField;
    private javax.swing.JTextField serialNumTxtField;
    // End of variables declaration//GEN-END:variables
}
