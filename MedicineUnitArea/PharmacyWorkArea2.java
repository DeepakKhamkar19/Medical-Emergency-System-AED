/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.MedicineUnitArea;

import Project.EcoSystem;
import Project.Venture.Venture;
import Project.Medicine.MedicineService;
import Project.Medicine.MedicineeList;
import Project.Network.NetworkService;
import Project.Organization.MedicineOrganizationService;
import Project.Organization.OrganizationService;

import Project.UserAccount.UserAccountService;


import Project.WorkQueue.WorkRequestService;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;

/**
 *
 * @author Deepak Khamkar
 */
public class PharmacyWorkArea2 extends javax.swing.JPanel {

    /**
     * Creates new form PharmacyWorkArea2
     */
    JPanel userProcessContainer;
    private UserAccountService userAccount;
    private Venture enterprise;
    private EcoSystem ecoSystem;
//    private MedicalInventoryList mil;
    private OrganizationService org;
    private MedicineOrganizationService pharmorg;
    private NetworkService network;
    private static Logger log = Logger.getLogger(PharmacyWorkArea2.class);
    private static final String CLASS_NAME = PharmacyWorkArea2.class.getName();

    public PharmacyWorkArea2(JPanel userProcessContainer, UserAccountService userAccount, OrganizationService organization, Venture enterprise, 
            NetworkService network,EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
//        this.pharmorg = organization;
        this.network = network;
        this.ecoSystem = ecoSystem;
        reorderTable();
//        populateDocTable();
        log.debug(userAccount+" "+"logged in");
    }

    public void reorderTable() {
        int rowCount = jreorderTable.getRowCount();
        DefaultTableModel model = (DefaultTableModel) jreorderTable.getModel();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        for (MedicineService mi : pharmorg.getMedList()) {
            Object row[] = new Object[6];
            row[0] = mi;
            row[1] = mi.getSeriallNumber();
            row[2] = mi.getAvailQuant();
            row[3] = mi.getReqQuantity();
            row[4] = mi.getReorderrStatus();
            //row[5] = mi.getReorderStatus();
            model.addRow(row);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jreorderTable = new javax.swing.JTable();
        jserialNumLbl = new javax.swing.JLabel();
        serialNumTxtField = new javax.swing.JTextField();
        mediNameLbl = new javax.swing.JLabel();
        mediNameTxtField = new javax.swing.JTextField();
        availQuantLbl = new javax.swing.JLabel();
        availQuantTxtField = new javax.swing.JTextField();
        reqQuantLbl = new javax.swing.JLabel();
        addMediBtn = new javax.swing.JButton();
        jpharmacyLbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComBox1 = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jreorderTable.setBorder(new javax.swing.border.MatteBorder(null));
        jreorderTable.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 0, 20)); // NOI18N
        jreorderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MEDICINE NAME", "SERIAL NUMBER ", "AVAILABILE QUANTITY", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jreorderTable.setRowHeight(25);
        jScrollPane1.setViewportView(jreorderTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 111, 871, 160));

        jserialNumLbl.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 24)); // NOI18N
        jserialNumLbl.setForeground(new java.awt.Color(0, 0, 102));
        jserialNumLbl.setText("SERIAL NUMBER: ");
        add(jserialNumLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 390, 210, 23));

        serialNumTxtField.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 20)); // NOI18N
        add(serialNumTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(561, 382, 252, 30));

        mediNameLbl.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 24)); // NOI18N
        mediNameLbl.setForeground(new java.awt.Color(0, 0, 102));
        mediNameLbl.setText("MEDICINE NAME: ");
        add(mediNameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 430, 210, 25));

        mediNameTxtField.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 20)); // NOI18N
        add(mediNameTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(561, 423, 252, 30));

        availQuantLbl.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 24)); // NOI18N
        availQuantLbl.setForeground(new java.awt.Color(0, 0, 102));
        availQuantLbl.setText("AVAILABLE QUANTITY:");
        add(availQuantLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(247, 467, 282, -1));

        availQuantTxtField.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 20)); // NOI18N
        add(availQuantTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 470, 252, 30));

        reqQuantLbl.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 24)); // NOI18N
        reqQuantLbl.setForeground(new java.awt.Color(0, 0, 102));
        reqQuantLbl.setText("Status :");
        add(reqQuantLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 520, -1, -1));

        addMediBtn.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 24)); // NOI18N
        addMediBtn.setForeground(new java.awt.Color(0, 0, 102));
        addMediBtn.setText("ADD MEDICINE");
        addMediBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMediBtnActionPerformed(evt);
            }
        });
        add(addMediBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 580, 251, -1));

        jpharmacyLbl.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 48)); // NOI18N
        jpharmacyLbl.setForeground(new java.awt.Color(0, 0, 102));
        jpharmacyLbl.setText("Pharmacy Work Area");
        add(jpharmacyLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pharamacy.jpg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 0, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/medicine.jpg"))); // NOI18N
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 570, 110, 60));

        jComBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(jComBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 520, 250, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void addMediBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMediBtnActionPerformed
        // TODO add your handling code here:

        MedicineService m = new MedicineService();
        String name = mediNameTxtField.getText().trim();
        String error_message = "";
        String avail = availQuantTxtField.getText();
        try {
            Integer.parseInt(avail);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Available quantity must be integer");
            return;

        }
        if(name.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter the name ");
            return;
        }
        
        m.setMedName(mediNameTxtField.getText());
        try{
        int availableQuantity = Integer.parseInt(availQuantTxtField.getText());
        m.setAvailQuant(availableQuantity);
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "serial number must be integer!");
            return;
        }
        try{
        int serialNumber = Integer.parseInt(serialNumTxtField.getText());
        m.setSeriallNumber(serialNumber);
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "serial number must be integer!");
            return;
        }
        //String req = reqQuantityTxtField.getText();
        try {
           
           // m.setRequiredQuantity( Integer.parseInt(req));
        } catch (NumberFormatException e) {

            JOptionPane.showMessageDialog(null, "Required quantity must be integer!");
            return;
        }
       
//        ArrayList<String> medicineCheck = new ArrayList<>();
//        for(MedicalInventory mc:pharmorg.getMedList())
//        {
//            medicineCheck.add(mc.getMedicineName().toLowerCase());
//        }
//        if(medicineCheck.contains(name.toLowerCase()))
//        {
//            JOptionPane.showMessageDialog(null, "medicine already existed please update the quantity by clicking on view details");
//            return;
//        }
        pharmorg.addMedicine(m);
        m.setReorderrStatus("N");

        DefaultTableModel dtm = (DefaultTableModel) jreorderTable.getModel();

        dtm.setRowCount(0);
        for (MedicineService mi : pharmorg.getMedList()) {
            Object row[] = new Object[5];
            row[0] = mi;
            row[1] = mi.getSeriallNumber();
            row[2] = mi.getAvailQuant();
            row[3] = mi.getReqQuantity();
            row[4] = mi.getReorderrStatus();
            dtm.addRow(row);
        }

        JOptionPane.showMessageDialog(null, "Medicine Added Successfully", "Warning", JOptionPane.INFORMATION_MESSAGE);
        log.debug("medicine added successfully");
        serialNumTxtField.setText("");
        mediNameTxtField.setText("");
        availQuantTxtField.setText("");
        //reqQuantityTxtField.setText("");

    }//GEN-LAST:event_addMediBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addMediBtn;
    private javax.swing.JLabel availQuantLbl;
    private javax.swing.JTextField availQuantTxtField;
    private javax.swing.JComboBox<String> jComBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jpharmacyLbl;
    private javax.swing.JTable jreorderTable;
    private javax.swing.JLabel jserialNumLbl;
    private javax.swing.JLabel mediNameLbl;
    private javax.swing.JTextField mediNameTxtField;
    private javax.swing.JLabel reqQuantLbl;
    private javax.swing.JTextField serialNumTxtField;
    // End of variables declaration//GEN-END:variables
}
