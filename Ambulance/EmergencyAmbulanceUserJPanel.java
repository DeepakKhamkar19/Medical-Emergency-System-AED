/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Ambulance;

import Project.EcoSystem;
import Project.Venture.Venture;
import Project.MedicalEmployment.AmbulanceService;
import Project.MedicalEmployment.PatientDetails;
import Project.Network.NetworkService;
import Project.Organization.OrganizationService;
import Project.UserAccount.UserAccountService;
import Project.WorkQueue.AmbulanceWorkRequestService;
import Project.WorkQueue.DoctorWorkRequestService;
import Project.WorkQueue.EmergencyPatientRequestService;
import Project.WorkQueue.WorkRequestService;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

;

/**
 *
 * @author Deepak Khamkar
 */
public class EmergencyAmbulanceUserJPanel extends javax.swing.JPanel {

    /**
     * Creates new form EmergencyAmbulanceUserJPanel
     */
     JPanel userProcessContainer;
    UserAccountService account;
    OrganizationService organization;
    Venture enterprise;
    NetworkService network;
    EcoSystem business;
    public EmergencyAmbulanceUserJPanel(JPanel userProcessContainer, 
            UserAccountService account,OrganizationService organization,Venture enterprise,NetworkService network,
            EcoSystem business) {
        initComponents();
          this.userProcessContainer = userProcessContainer;
         this.account = account;
         this.organization = organization;
         this.enterprise = enterprise;
         this.network = network;
         this.business = business;
         populateTable();
    }

    public void populateTable()
    {
        DefaultTableModel model = (DefaultTableModel) WorkReqTable.getModel();
        model.setRowCount(0);
        System.out.println("Total workreq "+account.getWorkkQueue().getWorkRequestList().size());
        
        for (WorkRequestService wr : account.getWorkkQueue().getWorkRequestList()) {
            if(wr instanceof AmbulanceWorkRequestService) {
                
                AmbulanceWorkRequestService epr = (AmbulanceWorkRequestService)wr;
                
                Object[] row = new Object[model.getColumnCount()];
                row[0] = epr;
                row[1] = epr.getPat().getPatName();//epr.getSender().getEmployee().getName();
                row[2] = epr.getPat().getPatName();
                row[3] = epr.getPat().getAdd();
                row[4] = epr.getCritical();
                row[5] = epr.getStat();// epr.getRequestdate();
                row[6] = epr.getReqDate();
                row[7] = epr.getPat().getPhoneNo();
               // row[8] = "" ;
               // row[9] = "";//epr.getEmergencyDoctor() != null ? epr.getEmergencyDoctor().;
                model.addRow(row);
            }
            
        }
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        WorkReqTable = new javax.swing.JTable();
        btnAck = new javax.swing.JButton();
        jbtnReject = new javax.swing.JButton();
        jbtnCompleteRequest = new javax.swing.JButton();
        jbtnProcess = new javax.swing.JButton();
        jkButton1 = new javax.swing.JButton();
        jkButton2 = new javax.swing.JButton();
        jkLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        WorkReqTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "RequestId", "Sender", "Patient Name", "Patient Address", "Criticality", "Status", "Request Date", "Phone Number"
            }
        ));
        jScrollPane1.setViewportView(WorkReqTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 140, 762, 169));

        btnAck.setText("Accept Request");
        btnAck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAckActionPerformed(evt);
            }
        });
        add(btnAck, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 344, 150, -1));

        jbtnReject.setText("Reject Request");
        jbtnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnRejectActionPerformed(evt);
            }
        });
        add(jbtnReject, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 344, 150, -1));

        jbtnCompleteRequest.setText("Complete Request");
        jbtnCompleteRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCompleteRequestActionPerformed(evt);
            }
        });
        add(jbtnCompleteRequest, new org.netbeans.lib.awtextra.AbsoluteConstraints(649, 344, 150, -1));

        jbtnProcess.setText("Process Request");
        jbtnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnProcessActionPerformed(evt);
            }
        });
        add(jbtnProcess, new org.netbeans.lib.awtextra.AbsoluteConstraints(449, 344, 150, -1));

        jkButton1.setText("Refresh");
        add(jkButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(649, 99, 150, -1));

        jkButton2.setText("Get Patient Location");
        jkButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jkButton2ActionPerformed(evt);
            }
        });
        add(jkButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 395, 150, -1));

        jkLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jkLabel1.setText("EMERGENCY AMBULANCE");
        add(jkLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 21, 341, -1));
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 90, 80));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAckActionPerformed
        int count = WorkReqTable.getSelectedRowCount();
        if(count != 1) {
            JOptionPane.showMessageDialog(null, "Select a request");
        }else {
            int selectedRow = WorkReqTable.getSelectedRow();
            AmbulanceWorkRequestService emerReq = (AmbulanceWorkRequestService) WorkReqTable.getValueAt(selectedRow, 0);
            if(emerReq.getStat().equals("Rejected")) {
                JOptionPane.showMessageDialog(null, "Request is already Rejected");
            }else if(emerReq.getStat().equals("Accepted")) {
                JOptionPane.showMessageDialog(null, "Request is already Accepted");
            }else if(emerReq.getStat().equals("Processing")) {
                JOptionPane.showMessageDialog(null, "Request is already Processing");
            }else if(emerReq.getStat().equals("Completed")) {
                JOptionPane.showMessageDialog(null, "Request is already Completed");
            }else if(emerReq.getStat().equals("Cancelled")) {
                JOptionPane.showMessageDialog(null, "Request is already cancelled by sender");
            }else {
                String msg = JOptionPane.showInputDialog("Additional Message");
                  if(msg != null)
                {
                emerReq.setStat("Accepted");
                emerReq.setMes(msg);
                }
                populateTable();
            }
            //emerReq.setStatus("Accepted");
        }
        populateTable();
    }//GEN-LAST:event_btnAckActionPerformed

    private void jbtnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnRejectActionPerformed
        int count = WorkReqTable.getSelectedRowCount();
        if(count != 1) {
            JOptionPane.showMessageDialog(null, "Select a request");
        }else {
            int selectedRow = WorkReqTable.getSelectedRow();
            AmbulanceWorkRequestService emerReq = (AmbulanceWorkRequestService) WorkReqTable.getValueAt(selectedRow, 0);
            if(emerReq.getStat().equals("Rejected")) {
                JOptionPane.showMessageDialog(null, "Request is already Rejected");
            }else if(emerReq.getStat().equals("Accepted")) {
                JOptionPane.showMessageDialog(null, "Request is already Accepted");
            }else if(emerReq.getStat().equals("Processing")) {
                JOptionPane.showMessageDialog(null, "Request is already Accepted and Processing");
            }else if(emerReq.getStat().equals("Completed")) {
                JOptionPane.showMessageDialog(null, "Request is already Completed");
            }else if(emerReq.getStat().equals("Cancelled")) {
                JOptionPane.showMessageDialog(null, "Request is already cancelled by sender");
            }else {
                String msg = JOptionPane.showInputDialog("Additional Message");
                  if(msg != null)
                {
                emerReq.setStat("Rejected");
                emerReq.setMes(msg);
               // populateTable();
                }
            }
        }
        populateTable();
    }//GEN-LAST:event_jbtnRejectActionPerformed

    private void jbtnCompleteRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCompleteRequestActionPerformed
        int count = WorkReqTable.getSelectedRowCount();
        if(count != 1) {
            JOptionPane.showMessageDialog(null, "Select a request");
        }else {
            int selectedRow = WorkReqTable.getSelectedRow();
            AmbulanceWorkRequestService emerReq = (AmbulanceWorkRequestService) WorkReqTable.getValueAt(selectedRow, 0);
            if(emerReq.getStat().equals("Rejected")) {
                JOptionPane.showMessageDialog(null, "Request is already Rejected");
            }else if(emerReq.getStat().equals("Accepted")) {
                JOptionPane.showMessageDialog(null, "Request should be in processing state before marking complete");
            }else if(emerReq.getStat().equals("Completed")) {
                JOptionPane.showMessageDialog(null, "Request is already Completed");
            }else if(emerReq.getStat().equals("Cancelled")) {
                JOptionPane.showMessageDialog(null, "Request is already cancelled by sender");
            }else if(emerReq.getStat().equals("Requested")) {
                JOptionPane.showMessageDialog(null, "Request is not yet Accepted");
            }else {
                String msg = JOptionPane.showInputDialog("Additional Message");
                  if(msg != null)
                {
                emerReq.setStat("Completed");
                emerReq.setMes(msg);
                }
                populateTable();
            }
        }
    }//GEN-LAST:event_jbtnCompleteRequestActionPerformed

    private void jbtnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnProcessActionPerformed
        int count = WorkReqTable.getSelectedRowCount();
        if (count != 1) {
            JOptionPane.showMessageDialog(null, "Select one row", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            int selectedRow = WorkReqTable.getSelectedRow();
            AmbulanceWorkRequestService emerReq = (AmbulanceWorkRequestService) WorkReqTable.getValueAt(selectedRow, 0);
            if(emerReq.getStat().equals("Cancelled")) {
                JOptionPane.showMessageDialog(null, "Request is already cancelled by sender");
            }else if(emerReq.getStat().equals("Processing")){
                JOptionPane.showMessageDialog(null, "Request is already Processing");
            }else if(emerReq.getStat().equals("Rejected")){
                JOptionPane.showMessageDialog(null, "Request is already Rejected");
            }else if(emerReq.getStat().equals("Completed")){
                JOptionPane.showMessageDialog(null, "Request is already Completed");
            }else if(emerReq.getStat().equals("Requested")) {
                JOptionPane.showMessageDialog(null, "Request is not yet Accepted");
            }else {
                String msg = JOptionPane.showInputDialog("Additional Message");
                  if(msg != null)
                {
                emerReq.setStat("Processing");
                emerReq.setMes(msg);
                }
                populateTable();
            }
        }
    }//GEN-LAST:event_jbtnProcessActionPerformed

    private void jkButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jkButton2ActionPerformed
        // TODO add your handling code here:
         int count = WorkReqTable.getSelectedRowCount();
        if(count != 1) {
            JOptionPane.showMessageDialog(null, "Select a request");
        }else {
            int selectedRow = WorkReqTable.getSelectedRow();
            AmbulanceWorkRequestService emerReq = (AmbulanceWorkRequestService) WorkReqTable.getValueAt(selectedRow, 0);
            PatientDetails patient = emerReq.getPat();
            String coordinates = patient.getLocaation();
            String address = patient.getAdd();
            AmbulanceService ambulance = emerReq.getAmb();
            String location = ambulance.getLocationn();
        PatientLocationMapService.openMap("'"+address+"'"+"," +coordinates + ",1", "['Ambulance Location'"+"," +location + ",2]");
        }
    }//GEN-LAST:event_jkButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable WorkReqTable;
    private javax.swing.JButton btnAck;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnCompleteRequest;
    private javax.swing.JButton jbtnProcess;
    private javax.swing.JButton jbtnReject;
    private javax.swing.JButton jkButton1;
    private javax.swing.JButton jkButton2;
    private javax.swing.JLabel jkLabel1;
    // End of variables declaration//GEN-END:variables
}
